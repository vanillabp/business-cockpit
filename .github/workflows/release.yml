name: Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version to release (e.g. 1.2.3)'
        required: true
      next_snapshot:
        description: 'Next development snapshot (e.g. 1.2.4-SNAPSHOT)'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven
          server-id: vanillabp-central
          server-username: ${{ secrets.MAVEN_CENTRAL_PORTAL_TOKEN_USER }}
          server-password: ${{ secrets.MAVEN_CENTRAL_PORTAL_TOKEN_PW }}
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Configure npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_PUBLISH_TOKEN }}" > ~/.npmrc

      - name: Create release branch
        run: |
          git checkout -b release/${{ github.event.inputs.release_version }} origin/main

      - name: Set Maven release version
        run: |
          mvn versions:set -DnewVersion=${{ github.event.inputs.release_version }}
          find . -name pom.xml.versionsBackup -delete

      - name: Update npm package.json versions
        run: |
          # Simple sed replacement for package.json version and deps
          find . -name package.json | while read f; do
            sed -i "s/-SNAPSHOT//g" "$f"
            sed -i "s/\"version\": \".*\"/\"version\": \"${{ github.event.inputs.release_version }}\"/" "$f"
            sed -i "s/\">=.*-SNAPSHOT <[0-9.]*\"/\"${{ github.event.inputs.release_version }}\"/" "$f"
          done
          
      - name: Workaround to avoid npm DNS replication delay between publish and consume
        run: |
          IP=$(nslookup registry.npmjs.com | awk '/^Address: / { print $2; exit }')
          echo "$IP registry.npmjs.com" | sudo tee -a /etc/hosts

      - name: Build & deploy to Maven Central and npm
        run: |
          mvn -B -DskipTests -DskipITs \
            -Dgpg.passphrase=$GPG_PASSPHRASE -DaltDeploymentRepository=local::default::file:target/staging -Dnpm.registry=http://localhost:4873/ \
            clean deploy -P release,central-portal,release-npm
        env:
          GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Commit release version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add -A
          git commit -m "Prepare release v${{ github.event.inputs.release_version }}"

      - name: Build runnable JARs
        run: |
          cd container && mvn -B -DskipTests -DskipITs package spring-boot:repackage -Pskip-release-npm && cd ..
          cd development/simulator && mvn -B -DskipTests -DskipITs package spring-boot:repackage -Pskip-release-npm && cd ../..
          cd dev-shell-simulator && mvn -B -DskipTests -DskipITs package spring-boot:repackage -Pskip-release-npm && cd ../..

      - name: Create Git tag
        run: |
          git tag -a "${{ github.event.inputs.release_version }}" -m "Release ${{ github.event.inputs.release_version }}"
          git push origin --tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          name: Release ${{ github.event.inputs.release_version }}
          body: |
            Automated release for version ${{ github.event.inputs.release_version }}.
              - Published to Maven Central
              - Published to npm
              - Built runnable JARs included
          files: |
            **/*-runnable.jar

      - name: Set next snapshot version
        run: |
          mvn versions:set -DnewVersion=${{ github.event.inputs.next_snapshot }}
          find . -name pom.xml.versionsBackup -delete

          find . -name package.json | while read f; do
            sed -i "s/\"version\": \".*\"/\"version\": \"${{ github.event.inputs.next_snapshot }}\"/" "$f"
            SNAP_BASE=$(echo "${{ github.event.inputs.next_snapshot }}" | sed 's/-SNAPSHOT//')
            NEXT_MINOR=$(echo $SNAP_BASE | awk -F. '{$NF++; print}' OFS=.)
            sed -i "s/\"@vanillabp\/bc-official-gui-client\": \".*\"/\"@vanillabp\/bc-official-gui-client\": \">=${{ github.event.inputs.next_snapshot }} <${NEXT_MINOR}\"/" "$f"
          done

          mvn -B -DskipTests -DskipITs package -Punpublish-npm

      - name: Commit next snapshot version
        run: |
          git add -A
          git commit -m "Set next version ${{ github.event.inputs.next_snapshot }}"
          git push origin HEAD:release/${{ github.event.inputs.release_version }}
          
      - name: Create PR to merge release branch into main
        run: |
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
          gh pr create \
            --title "Merge release/${{ github.event.inputs.release_version }} into main" \
            --body "Automated PR to merge release branch." \
            --base main \
            --head release/${{ github.event.inputs.release_version }} \
